openapi: 3.0.3
info:
  title: API Mayoo
  description: API de l'application MAYOO
  version: 1.0.0
servers:
  - url: 'http://localhost:8090'
paths:
  /auth/user/{id_right}/create:
    post:
      description: route permettant de créer un utilisateur
      parameters:
        - name: id_right
          in: path
          required: true
          schema:
            type: string
            enum:
              - eleve
              - professeur
              - cuisinier
      requestBody:
        required: true
        content: 
          application/json:
            schema: 
              $ref: "#/components/schemas/RegisterRequest"
      responses: 
        "201":
          description: Utilisateur créer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationResponse"
        "403":
          description: Error dans la création de l'utilisateur
          content: 
            application/json:
              schema: 
                $ref: "#/components/schemas/ErrorMessage"
  /auth/user:
    post:
      description: route permettant l'autentification de l'utilsiateur
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: "#/components/schemas/AuthenticationRequest"
      responses:
        "200":
          description: Utilisateur connecter
          content: 
            application/json:
              schema: 
                $ref: "#/components/schemas/AuthenticationResponse"
        "401":
          description: Utilisateur non connecter
  /auth/user/allergenes:
    post:
      description: route permettant de d'attribuer les allergenes a une personne
      parameters:
        - in: header
          name: Authorization
          schema: 
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetPictograms"
      responses: 
        "202":
          description: les allegernes ont bien était set à l'utilisateur
        "406":
          description: ajout d'allergenes inexistant ou utilisateur
  /flat:
    post:
      description: route permetant l'ajout d'un plat
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: "#/components/schemas/Flat"
      responses: 
        "201":
          description: Plat créer
        "403":
          description: Erreur lors de la création des plats
          content: 
            application/json:
              schema: 
                $ref: "#/components/schemas/ErrorMessage"
    get:
      description: route permetant d'avoir tous les plats dans la base de données
      responses: 
        "200":
          description: Renvoie toutes les plats qui sont dans la base de données
          content: 
            application/json:
              schema: 
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/Flat"
  
  /flat/{id}:
    get:
      description: route permettant de récupérer un plat précis
      parameters:
        - name : id
          in: path
          required: true
          schema: 
            type: integer
      responses: 
        "200":
          description: retourne le plat si il existe
          content: 
            application/json:
              schema: 
                $ref: "#/components/schemas/Flat"
        "404":
          description: plat non trouvé
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
  /menue:
    get:
      description: permet d'obtenir tous les menues de la semaine
      responses: 
        "200":
          description: retourne tous les menue de la semaine
          content: 
            application/json:
              schema:
                items: 
                  $ref: "#/components/schemas/Menue"
        "404":
          description: menue non trouvé
    post:
      description: ajoute un menue
      requestBody:
        required: true
        content: 
          application/json: 
            schema: 
              $ref: "#/components/schemas/Menue"
      responses:
        "201":
          description: Menue créer
        "403":
          description: Menue pas créer a cause des erreurs
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ErrorMessage"
components: 
 schemas: 
    ErrorMessage:
      type: object
      required: 
        - code
        - message
      properties: 
        code:
          type: integer
          format: int32
        message:
          type: string
    RegisterRequest:
      type: object
      required:
        - first_name
        - last_name
        - email
        - password
        - valid_password
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        password:
          type: string
        valid_password:
          type: string
    AuthenticationRequest:
      type: object
      required: 
        - email
        - password
      properties: 
        email:
          type: string
        password:
          type: string
    AuthenticationResponse:
      type: object
      properties: 
        token:
          type: string
    Flat:
      type: object
      properties: 
        name:
          type: string
        description:
          type: string
        flatType:
          enum:
            - STARTER
            - FLAT
            - DESSERT
        pictograms:
          type: array
          items: 
            type: number
            format: int32
    Pictograms:
      type: object
      properties: 
        name:
          type: string
        description:
            type: string
        typepictogram:
          enum:
            - NORMAL
            - WARNING
            - DANGER
    SetPictograms:
      type: object
      properties: 
        id:
          type: array
          items: 
            type: integer
    Menue:
      type: object
      properties: 
        date:
          type: string
        flats:
          type: array
          items:
            $ref: "#/components/schemas/Flat"